input {
	file {
	    type => "nginx-access-log"
		path => "/Users/ami/devops/elk/ml-latest/ip-log/web_access.log"
        start_position => "beginning"
#		sincedb_path => "/Users/ami/devops/elk/log/nginx-parse.log"
		sincedb_path => "/dev/null"
	}
}

filter {
        if [type] =~ "nginx-access-log" {
            #nignx sample
            #106.127.232.158 - "106.127.232.158" - "CN" - [16/Jul/2020:23:59:07 +0800] "GET /api/getOnlineInfo.do?t=1594915147595 HTTP/1.1" 200 46 "https://www.41008.com/mobile/?att=gg0000"
            #"Mozilla/5.0 (Linux; Android 6.0.1; vivo Y66 Build/MMB29M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.84 Mobile Safari/537.36 VivoBrowser/5.6.3.1" 127.0.0.1:8081 200 -
            #"text/html; charset=UTF-8" 0.013 > 0.012 "-" www.41008.com "x-session-token=FXW7jrmtFzgomMQHugow7IXTFF0aic3h/2M78pnS72ny/c80Vjy0PQ=="
            ##将nginx access log透过grok 模式转换 定位出log每个字段位置
            grok {
                match=> [
                    "message" ,
                    "%{IP:remote_addr} - \"%{DATA:remote_ip_list}\" - \"%{DATA:country}\" - \[%{HTTPDATE:http_time}\] \"%{DATA:http_method} %{DATA:uri} %{DATA:http_protocol}\" %{NUMBER:http_status} %{NUMBER:body_bytes_sent} \"%{DATA:http_referer}\" \"%{DATA:user_agent}\" %{DATA:upstream_addr} %{DATA:upstream_status} - \"%{DATA:upstream_http_content_type}\" %{DATA:upstream_response_time} > %{DATA:request_time} \"%{DATA:post_body}\" %{HOSTNAME:host} \"%{DATA:request_body}\""
                ]
            }

            mutate {
               split => { "uri" => "?" }
               add_field => {
                 "url" => "%{[uri][0]}"
                 "param" => "%{[uri][1]}"
               }
#               remove_field => "[message]"
               remove_field => "[uri]"
            }

            geoip {
               source => "[remote_addr]"
               target => "[geoip]"
               add_field => ["[geoip][coordinates]", "%{[geoip][longitude]}"]
               add_field => ["[geoip][coordinates]", "%{[geoip][latitude]}"]
            }

            mutate {
               convert => ["[geoip][coordinates]", "float"]
            }

        }
}



output {
   elasticsearch {
     hosts => "http://localhost:9200"
     index => "nginx-access"
   }
}